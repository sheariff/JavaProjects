package Server;

import java.util.Arrays;
import java.io.File;
import java.util.Observable;

public class FolderObservable extends Observable implements Runnable
{
    private File[] directory;
    private WatchFileInterface fileWatcher;
    private String directoryName;
    
    public FolderObservable(final String directoryName) {
        this.directory = null;
        this.fileWatcher = null;
        this.directoryName = null;
        this.directoryName = directoryName;
        this.fileWatcher = (WatchFileInterface)new WatchFile(this.directoryName);
    }
    
    @Override
    public void run() {
        while (true) {
            final File[] temp = this.fileWatcher.ReturnFiles();
            if (!Arrays.equals(temp, this.directory)) {
                this.directory = temp;
                this.setChanged();
                this.notifyObservers(this.directory);
                try {
                    Thread.sleep(500L);
                }
                catch (InterruptedException e) {
                    System.err.println("Error the thread has been interrupted");
                }
            }
        }
    }
}